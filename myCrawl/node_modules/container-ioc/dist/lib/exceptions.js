"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class InvalidProviderProvidedError extends Error {
    constructor(provider) {
        super(`${JSON.stringify(provider)} - is not a valid provider.`);
    }
}
exports.InvalidProviderProvidedError = InvalidProviderProvidedError;
class ClassNotInjectableError extends Error {
    constructor(constructorName) {
        super(`Class ${constructorName} is not injectable. Check if it's decorated with @Injectable() decorator`);
    }
}
exports.ClassNotInjectableError = ClassNotInjectableError;
class NoProviderError extends Error {
    constructor(token, traceMessage) {
        super(`No provider for ${token}. ${traceMessage}`);
    }
}
exports.NoProviderError = NoProviderError;
